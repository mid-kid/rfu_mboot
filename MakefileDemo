CC = thumb-elf-gcc
AS = thumb-elf-as
OBJCOPY = thumb-elf-objcopy

.SFILES    =   crt0_demo.s
.CFILES    =   Main.c searchMenu.c menuFunc.c myFunc.c sound.c data.c soundData.c interrupt.c
.BFILES    =   char/pals.bin char/tmap.bin char/search_tmap.bin char/tiles.bin
.OFILES    =   $(.SFILES:.s=.o) $(.CFILES:.c=.o) $(.BFILES:.bin=_LZ.o)

AGBINC	=	$(AGBDIR)/include
AGBLIB	=	$(AGBDIR)/lib
RFULIB	=	./AgbRfuLib

ASFLAGS    =          -I$(AGBINC) -I$(RFULIB) -mthumb-interwork
CFLAGS     =   -g -O2 -I$(AGBINC) -I$(RFULIB) -mthumb-interwork \
               -nostdlib -Wall -Werror #-DNDEBUG
LDFLAGS    +=  -Map $(MAPFILE) -nostartfiles \
               -T $(LINKFILE) \
			   -L$(RFULIB) -lagbrfu -L$(AGBLIB) -lagbsyscall

LINKFILE   =   demo.ld
DEPENDFILE =   demo.dep
MAPFILE    =   demo.map
TARGET_ELF =   demo.elf
TARGET_BIN =   demo.bin


default:
	@$(MAKE) -C $(RFULIB)
	@$(MAKE) -f MakefileDemo $(TARGET_BIN)


$(TARGET_BIN): $(TARGET_ELF)
	$(OBJCOPY) -v -O binary $< $@

$(TARGET_ELF): $(.OFILES) Makefile $(LINKFILE) $(DEPENDFILE) $(RFULIB)/libagbrfu.a
	@echo > $(MAPFILE)
	$(CC) -g -o $@ $(.OFILES) -Wl,$(LDFLAGS)

%.o: %.bin
	$(OBJCOPY) -I binary=.rodata -O elf32-little $< $@

%_LZ.bin: %.bin
	agbcomp -b -l 2 $<

%.bin: %.bmp
	bmp2agb -np -bi $<

char/tiles.bin: char/tiles.bmp
	bmp2agb -np -bi $<
	truncate -s 11712 $@


.PHONY: all clean depend


all:    clean $(TARGET_BIN)

clean:
	@$(MAKE) -C $(RFULIB) clean
	-rm $(.OFILES) $(DEPENDFILE) $(MAPFILE) $(TARGET_ELF) $(TARGET_BIN)

depend:
	$(CC) $(CFLAGS) -M $(.CFILES) > $(DEPENDFILE)

$(DEPENDFILE): 
	$(CC) $(CFLAGS) -M $(.CFILES) > $(DEPENDFILE)


# Matching hacks
sound.o: CC := ThumbPatch-thumb-elf-gcc

include GasdependDemo
include $(DEPENDFILE)
